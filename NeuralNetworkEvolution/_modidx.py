# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/NeuralNetworkEvolution',
                'doc_host': 'https://ParticularlyPythonicBS.github.io',
                'git_url': 'https://github.com/ParticularlyPythonicBS/NeuralNetworkEvolution',
                'lib_path': 'NeuralNetworkEvolution'},
  'syms': { 'NeuralNetworkEvolution.Activations': { 'NeuralNetworkEvolution.Activations.identity': ( 'activations.html#identity',
                                                                                                     'NeuralNetworkEvolution/Activations.py'),
                                                    'NeuralNetworkEvolution.Activations.sin': ( 'activations.html#sin',
                                                                                                'NeuralNetworkEvolution/Activations.py')},
            'NeuralNetworkEvolution.activations': { 'NeuralNetworkEvolution.activations.identity': ( 'activations.html#identity',
                                                                                                     'NeuralNetworkEvolution/activations.py'),
                                                    'NeuralNetworkEvolution.activations.sin': ( 'activations.html#sin',
                                                                                                'NeuralNetworkEvolution/activations.py')},
            'NeuralNetworkEvolution.classic_mlp': { 'NeuralNetworkEvolution.classic_mlp.MLP': ( 'classic_mlp_sine_cos.html#mlp',
                                                                                                'NeuralNetworkEvolution/classic_mlp.py'),
                                                    'NeuralNetworkEvolution.classic_mlp.Model': ( 'classic_mlp_sine_cos.html#model',
                                                                                                  'NeuralNetworkEvolution/classic_mlp.py'),
                                                    'NeuralNetworkEvolution.classic_mlp.Model.__call__': ( 'classic_mlp_sine_cos.html#model.__call__',
                                                                                                           'NeuralNetworkEvolution/classic_mlp.py'),
                                                    'NeuralNetworkEvolution.classic_mlp.Model.__init__': ( 'classic_mlp_sine_cos.html#model.__init__',
                                                                                                           'NeuralNetworkEvolution/classic_mlp.py'),
                                                    'NeuralNetworkEvolution.classic_mlp.compute_loss': ( 'classic_mlp_sine_cos.html#compute_loss',
                                                                                                         'NeuralNetworkEvolution/classic_mlp.py'),
                                                    'NeuralNetworkEvolution.classic_mlp.train_step': ( 'classic_mlp_sine_cos.html#train_step',
                                                                                                       'NeuralNetworkEvolution/classic_mlp.py')},
            'NeuralNetworkEvolution.config': { 'NeuralNetworkEvolution.config.MLPConfig': ( 'config.html#mlpconfig',
                                                                                            'NeuralNetworkEvolution/config.py'),
                                               'NeuralNetworkEvolution.config.MLPConfig.load': ( 'config.html#mlpconfig.load',
                                                                                                 'NeuralNetworkEvolution/config.py'),
                                               'NeuralNetworkEvolution.config.MLPConfig.save': ( 'config.html#mlpconfig.save',
                                                                                                 'NeuralNetworkEvolution/config.py')},
            'NeuralNetworkEvolution.core': {'NeuralNetworkEvolution.core.foo': ('core.html#foo', 'NeuralNetworkEvolution/core.py')},
            'NeuralNetworkEvolution.mlp': {'NeuralNetworkEvolution.mlp.mlp_plot': ('mlp.html#mlp_plot', 'NeuralNetworkEvolution/mlp.py')},
            'NeuralNetworkEvolution.neuron': { 'NeuralNetworkEvolution.neuron.Neuron': ( 'neuron.html#neuron',
                                                                                         'NeuralNetworkEvolution/neuron.py'),
                                               'NeuralNetworkEvolution.neuron.Neuron.__call__': ( 'neuron.html#neuron.__call__',
                                                                                                  'NeuralNetworkEvolution/neuron.py'),
                                               'NeuralNetworkEvolution.neuron.Neuron.__init__': ( 'neuron.html#neuron.__init__',
                                                                                                  'NeuralNetworkEvolution/neuron.py'),
                                               'NeuralNetworkEvolution.neuron.Neuron.importance': ( 'neuron.html#neuron.importance',
                                                                                                    'NeuralNetworkEvolution/neuron.py')},
            'NeuralNetworkEvolution.prototyping': { 'NeuralNetworkEvolution.prototyping.MLP': ( 'prototyping_node_changes.html#mlp',
                                                                                                'NeuralNetworkEvolution/prototyping.py'),
                                                    'NeuralNetworkEvolution.prototyping.Model': ( 'prototyping_node_changes.html#model',
                                                                                                  'NeuralNetworkEvolution/prototyping.py'),
                                                    'NeuralNetworkEvolution.prototyping.Model.__call__': ( 'prototyping_node_changes.html#model.__call__',
                                                                                                           'NeuralNetworkEvolution/prototyping.py'),
                                                    'NeuralNetworkEvolution.prototyping.Model.__init__': ( 'prototyping_node_changes.html#model.__init__',
                                                                                                           'NeuralNetworkEvolution/prototyping.py'),
                                                    'NeuralNetworkEvolution.prototyping.add_node': ( 'prototyping_node_changes.html#add_node',
                                                                                                     'NeuralNetworkEvolution/prototyping.py'),
                                                    'NeuralNetworkEvolution.prototyping.compute_loss': ( 'prototyping_node_changes.html#compute_loss',
                                                                                                         'NeuralNetworkEvolution/prototyping.py'),
                                                    'NeuralNetworkEvolution.prototyping.remove_node': ( 'prototyping_node_changes.html#remove_node',
                                                                                                        'NeuralNetworkEvolution/prototyping.py'),
                                                    'NeuralNetworkEvolution.prototyping.train_step': ( 'prototyping_node_changes.html#train_step',
                                                                                                       'NeuralNetworkEvolution/prototyping.py'),
                                                    'NeuralNetworkEvolution.prototyping.where_bias': ( 'prototyping_node_changes.html#where_bias',
                                                                                                       'NeuralNetworkEvolution/prototyping.py'),
                                                    'NeuralNetworkEvolution.prototyping.where_weight': ( 'prototyping_node_changes.html#where_weight',
                                                                                                         'NeuralNetworkEvolution/prototyping.py')}}}
